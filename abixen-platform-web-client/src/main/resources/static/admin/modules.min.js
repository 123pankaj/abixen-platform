function AbstractCrudDetailController(a,b,c,d,e,f,g,h){e.log("AbstractCrudDetailController"),a.entity=null,a.formErrors=[],a.get=function(b,c){e.log("selected entity id:",b),b?f.get({id:b},function(b){a.entity=b,e.log("Entity has been got: ",a.entity),c&&c()}):a.entity={}},a.update=function(){e.log("update() - entity: ",a.entity),f.update({id:a.entity.id},a.entity,function(){e.log("Entity has been updated: ",a.entity),c.go(h+".list")})},a.save=function(){return e.log("$scope.entityForm.$invalid: "+a.entityForm.$invalid),e.log("$scope.entityForm.$invalid: ",a.entityForm),a.entityForm.$invalid?(e.log("Form is invalid and could not be saved."),void a.$broadcast("show-errors-check-validity")):(e.log("save() - entity: ",a.entity),void f.save(a.entity,function(b){if(a.entityForm.$setPristine(),e.log("data.form: ",b),angular.forEach(b.form,function(b,c){e.log("fiel22dName: "+c+", "+b),"id"!==c&&a.entityForm[c].$setValidity("serverMessage",!0)}),0==b.formErrors.length)return e.log("Entity has been saved: ",a.entity),void c.go(h+".list");for(var d=0;d<b.formErrors.length;d++){var f=b.formErrors[d].field;e.log("fieldName: "+f);var i=b.formErrors[d].message,j=g("entityForm."+f+".$error.serverMessage");a.entityForm[f].$setValidity("serverMessage",!1),j.assign(a,i)}a.$broadcast("show-errors-check-validity")}))},a.saveForm=function(b){e.log("saveForm()"),b&&b(),null==a.entity.id?a.save():a.update()}}function AbstractCrudListController(a,b,c,d,e,f){c.log("AbstractCrudListController"),a.editButtonEnabled=!1,a.deleteButtonEnabled=!1,a.selectedEntityId=null,a.entityListGrid={enableSorting:!0,exporterMenuCsv:!0,enableGridMenu:!0,enableFiltering:!0,onRegisterApi:function(b){a.gridApi=b,a.gridApi.grid.options.multiSelect=!1,a.gridApi.core.on.sortChanged(a,function(a,b){c.log("sortColumns: ",b)}),a.gridApi.core.on.filterChanged(a,function(){a.read()}),a.gridApi.selection.on.rowSelectionChanged(a,function(b){var d="row selected "+b.isSelected;c.log(d,b.entity.id),b.isSelected?(a.editButtonEnabled=!0,a.deleteButtonEnabled=!0,a.selectedEntityId=b.entity.id):(a.editButtonEnabled=!1,a.deleteButtonEnabled=!1,a.selectedEntityId=null)})}},a.delete=function(){c.log("delete() - selectedEntityId: ",a.selectedEntityId),null!=a.selectedEntityId&&e.delete({id:a.selectedEntityId},null,function(){c.log("Entity has been deleted: ",a.selectedEntityId),a.selectedEntityId=null,a.editButtonEnabled=!1,a.deleteButtonEnabled=!1,a.read()})},a.read=function(){f.getJsonCriteria(a.entityListGrid,[0,1,2,3]),c.log("query: "+JSON.stringify(a.query));var b=JSON.stringify(a.query),d={page:0,size:30,sort:"id,asc",jsonCriteria:b};e.query(d,function(b){a.entityListGrid.data=b.content,a.totalPages=b.totalPages,a.first=b.first,a.last=b.last,a.pageNumber=b.number,a.entitiesCount=b.totalElements})}}function AbstractPermissionsController(a,b,c,d,e,f,g,h){c.log("AbstractPermissionsController"),a.aclRolesPermissionsDto,a.get=function(){c.log("get() - permissionAclClassCategoryName: ",f,", objectId: ",g),e.get({objectId:g,permissionAclClassCategoryName:f},function(b){a.aclRolesPermissionsDto=b,c.log("AclRolesPermissions has been got: ",a.aclRolesPermissionsDto)})},a.saveForm=function(){c.log("saveForm() - permissionAclClassCategoryName: ",f,", objectId: ",g),e.update({objectId:g,permissionAclClassCategoryName:f},a.aclRolesPermissionsDto,function(b){c.log("AclRolesPermissions has been updated: ",a.aclRolesPermissionsDto),a.goBack()})},a.goBack=function(){d.go(h+".list")}}var GridFilter=function(){this.availableOperators={eq:"=",not:"!",like:"~",and:"&",or:"|"},this.globalOperator=this.availableOperators.and,this.getJsonCriteria=function(a){console.log("getJsonCriteria grid: ",a);for(var b="",c=0,d=0;d<a.columnDefs.length;d++)a.columnDefs[d].filter&&(console.log("filter ["+d+"]: ",a.columnDefs[d].filter),console.log(a.columnDefs[d].field+", "+a.columnDefs[d].filter.term),b+=0===c?"(":this.globalOperator+"(",b+=a.columnDefs[d].filter.term,b+=")",c++);console.log("stringExpression:",b)}};GridFilter.prototype.$get=function(){return this};var platformCommonModule=angular.module("platformCommonModule",[]);platformCommonModule.provider("gridFilter",GridFilter);var layoutControllers=angular.module("layoutControllers",[]);layoutControllers.controller("LayoutListController",["$scope","$http","$log","uiGridConstants","Layout","gridFilter","applicationNavigationItems","$state",function(a,b,c,d,e,f,g,h){c.log("LayoutListController"),angular.extend(this,new AbstractCrudListController(a,b,c,d,e,f)),a.entityListGrid.columnDefs=[{field:"id",pinnedLeft:!0,enableColumnResizing:!1,enableFiltering:!1,width:50},{field:"title",pinnedLeft:!0,width:200},{field:"createdBy.layoutname",name:"Created By",width:200},{field:"createdDate",width:200,cellFilter:"date:'"+platformParameters.formats.DATE_TIME_FORMAT+"'"},{field:"lastModifiedBy.layoutname",name:"Last Modified By",width:200},{field:"lastModifiedDate",width:200,cellFilter:"date:'"+platformParameters.formats.DATE_TIME_FORMAT+"'"}],a.query={and:[{name:"title",operation:"=",value:"Layout View"}]},a.filterCriteria={layout:0,size:20,sort:"id,asc",gridFilterParameters:[]};var i={id:1,styleClass:"btn add-new-object-button",title:"New Layout",faIcon:"fa fa-plus",onClick:function(){h.go("application.layouts.add")},visible:!0,disabled:!1};g.setTopbarItem(i),a.read()}]),layoutControllers.controller("LayoutDetailController",["$scope","$http","$state","$stateParams","$log","Layout",function(a,b,c,d,e,f){e.log("LayoutDetailController"),angular.extend(this,new AbstractCrudDetailController(a,b,c,d,e,f,"application.layouts")),a.get(d.id)}]),layoutControllers.controller("LayoutPermissionsController",["$scope","$stateParams","$log","$state","AclRolesPermissions",function(a,b,c,d,e){c.log("LayoutPermissionsController"),angular.extend(this,new AbstractPermissionsController(a,b,c,d,e,"layout",b.id,"application.layouts")),a.get()}]);var platformLayoutModule=angular.module("platformLayoutModule",["layoutControllers","layoutServices","ui.router"]);platformLayoutModule.config(["$stateProvider",function(a){a.state("application.layouts",{url:"/layouts",templateUrl:"/admin/modules/layout/html/index.html"}).state("application.layouts.list",{url:"/list",templateUrl:"/admin/modules/layout/html/list.html",controller:"LayoutListController"}).state("application.layouts.add",{url:"/add",templateUrl:"/admin/modules/layout/html/edit.html",controller:"LayoutDetailController"}).state("application.layouts.edit",{url:"/edit/:id",templateUrl:"/admin/modules/layout/html/edit.html",controller:"LayoutDetailController"}).state("application.layouts.permissions",{url:"/permissions/:id",templateUrl:"/admin/modules/common/html/permissions.html",controller:"LayoutPermissionsController"})}]);var layoutServices=angular.module("layoutServices",["ngResource"]);layoutServices.factory("Layout",["$resource",function(a){return a("/api/admin/layouts/:id",{},{query:{method:"GET",isArray:!1},update:{method:"PUT"}})}]);var moduleControllers=angular.module("moduleControllers",[]);moduleControllers.controller("ModuleListController",["$scope","$http","$log","uiGridConstants","Module","gridFilter","applicationNavigationItems","$state",function(a,b,c,d,e,f,g,h){c.log("ModuleListController"),angular.extend(this,new AbstractCrudListController(a,b,c,d,e,f)),a.entityListGrid.columnDefs=[{field:"id",pinnedLeft:!0,enableColumnResizing:!1,enableFiltering:!1,width:50},{field:"title",pinnedLeft:!0,width:200},{field:"description",pinnedLeft:!0,width:200},{field:"moduleType.title",pinnedLeft:!0,width:200},{field:"createdBy.username",name:"Created By",width:200},{field:"createdDate",width:200,cellFilter:"date:'"+platformParameters.formats.DATE_TIME_FORMAT+"'"},{field:"lastModifiedBy.username",name:"Last Modified By",width:200},{field:"lastModifiedDate",width:200,cellFilter:"date:'"+platformParameters.formats.DATE_TIME_FORMAT+"'"}],a.query={and:[{name:"title",operation:"=",value:"Module View"}]},a.filterCriteria={page:0,size:20,sort:"id,asc",gridFilterParameters:[]},g.clearTopbarItems(),a.read()}]),moduleControllers.controller("ModuleDetailController",["$scope","$http","$state","$parse","$stateParams","$log","Module","Layout",function(a,b,c,d,e,f,g,h){f.log("ModuleDetailController"),angular.extend(this,new AbstractCrudDetailController(a,b,c,e,f,g,d,"application.modules")),a.layouts=[];var i=function(){var b={page:0,size:20,sort:"id,asc"};h.query(b,function(b){a.layouts=b.content})};i(),a.get(e.id)}]),moduleControllers.controller("ModulePermissionsController",["$scope","$stateParams","$log","$state","AclRolesPermissions",function(a,b,c,d,e){c.log("ModulePermissionsController"),angular.extend(this,new AbstractPermissionsController(a,b,c,d,e,"module",b.id,"application.modules")),a.get()}]);var platformModuleModule=angular.module("platformModuleModule",["moduleControllers","moduleServices","ui.router"]);platformModuleModule.config(["$stateProvider",function(a){a.state("application.modules",{url:"/modules",templateUrl:"/admin/modules/module/html/index.html"}).state("application.modules.list",{url:"/list",templateUrl:"/admin/modules/module/html/list.html",controller:"ModuleListController"}).state("application.modules.add",{url:"/add",templateUrl:"/admin/modules/module/html/edit.html",controller:"ModuleDetailController"}).state("application.modules.edit",{url:"/edit/:id",templateUrl:"/admin/modules/module/html/edit.html",controller:"ModuleDetailController"}).state("application.modules.permissions",{url:"/permissions/:id",templateUrl:"/admin/modules/common/html/permissions.html",controller:"ModulePermissionsController"})}]);var moduleServices=angular.module("moduleServices",["ngResource"]);moduleServices.factory("Module",["$resource",function(a){return a("/api/admin/modules/:id",{},{query:{method:"GET",isArray:!1},update:{method:"PUT"}})}]);var pageControllers=angular.module("pageControllers",[]);pageControllers.controller("PageListController",["$scope","$http","$log","uiGridConstants","Page","gridFilter","applicationNavigationItems","$state",function(a,b,c,d,e,f,g,h){c.log("PageListController"),angular.extend(this,new AbstractCrudListController(a,b,c,d,e,f)),a.entityListGrid.columnDefs=[{field:"id",pinnedLeft:!0,enableColumnResizing:!1,enableFiltering:!1,width:50},{field:"name",pinnedLeft:!0,width:200},{field:"title",pinnedLeft:!0,width:200},{field:"description",pinnedLeft:!0,width:200},{field:"createdBy.username",name:"Created By",width:200},{field:"createdDate",width:200,cellFilter:"date:'"+platformParameters.formats.DATE_TIME_FORMAT+"'"},{field:"lastModifiedBy.username",name:"Last Modified By",width:200},{field:"lastModifiedDate",width:200,cellFilter:"date:'"+platformParameters.formats.DATE_TIME_FORMAT+"'"}],a.query={and:[{name:"title",operation:"=",value:"Page View"}]},a.filterCriteria={page:0,size:20,sort:"id,asc",gridFilterParameters:[]};var i={id:1,styleClass:"btn add-new-object-button",faIcon:"fa fa-plus",title:"Add Page",onClick:function(){h.go("application.pages.add")},visible:!0,disabled:!1};g.setTopbarItem(i),a.read()}]),pageControllers.controller("PageDetailController",["$scope","$http","$state","$parse","$stateParams","$log","Page","Layout",function(a,b,c,d,e,f,g,h){f.log("PageDetailController"),angular.extend(this,new AbstractCrudDetailController(a,b,c,e,f,g,d,"application.pages")),a.layouts=[];var i=function(){var b={page:0,size:20,sort:"id,asc"};h.query(b,function(b){a.layouts=b.content})};i(),a.get(e.id)}]),pageControllers.controller("PagePermissionsController",["$scope","$stateParams","$log","$state","AclRolesPermissions",function(a,b,c,d,e){c.log("PagePermissionsController"),angular.extend(this,new AbstractPermissionsController(a,b,c,d,e,"page",b.id,"application.pages")),a.get()}]);var platformPageModule=angular.module("platformPageModule",["pageControllers","pageServices","ui.router"]);platformPageModule.config(["$stateProvider",function(a){a.state("application.pages",{url:"/pages",templateUrl:"/admin/modules/page/html/index.html"}).state("application.pages.list",{url:"/list",templateUrl:"/admin/modules/page/html/list.html",controller:"PageListController"}).state("application.pages.add",{url:"/add",templateUrl:"/admin/modules/page/html/edit.html",controller:"PageDetailController"}).state("application.pages.edit",{url:"/edit/:id",templateUrl:"/admin/modules/page/html/edit.html",controller:"PageDetailController"}).state("application.pages.permissions",{url:"/permissions/:id",templateUrl:"/admin/modules/common/html/permissions.html",controller:"PagePermissionsController"})}]);var pageServices=angular.module("pageServices",["ngResource"]);pageServices.factory("Page",["$resource",function(a){return a("/api/admin/pages/:id",{},{query:{method:"GET",isArray:!1},update:{method:"PUT"}})}]),pageServices.factory("AclRolesPermissions",["$resource",function(a){return a("api/admin/acls",{},{query:{method:"GET",isArray:!1},update:{method:"PUT"}})}]);var permissionControllers=angular.module("permissionControllers",[]);permissionControllers.controller("PermissionListController",["$scope","$http","$log","uiGridConstants","Permission","gridFilter","applicationNavigationItems","$state",function(a,b,c,d,e,f,g,h){c.log("PermissionListController"),angular.extend(this,new AbstractCrudListController(a,b,c,d,e,f)),a.entityListGrid.columnDefs=[{field:"id",pinnedLeft:!0,enableColumnResizing:!1,enableFiltering:!1,width:50},{field:"title",pinnedLeft:!0,width:200},{field:"description",enableSorting:!1,width:200},{field:"permissionName",width:200},{field:"permissionCategory",width:200},{field:"createdBy.username",name:"Created By",width:200},{field:"createdDate",width:200,cellFilter:"date:'"+platformParameters.formats.DATE_TIME_FORMAT+"'"},{field:"lastModifiedBy.username",name:"Last Modified By",width:200},{field:"lastModifiedDate",width:200,cellFilter:"date:'"+platformParameters.formats.DATE_TIME_FORMAT+"'"}],a.query={and:[{name:"title",operation:"=",value:"Page View"}]},a.filterCriteria={page:0,size:20,sort:"id,asc",gridFilterParameters:[]},g.clearTopbarItems(),a.read()}]);var platformPermissionModule=angular.module("platformPermissionModule",["permissionControllers","permissionServices","ui.router"]);platformPermissionModule.config(["$stateProvider",function(a){a.state("application.permissions",{url:"/permissions",templateUrl:"/admin/modules/permission/html/index.html"}).state("application.permissions.list",{url:"/list",templateUrl:"/admin/modules/permission/html/list.html",controller:"PermissionListController"})}]);var permissionServices=angular.module("permissionServices",["ngResource"]);permissionServices.factory("Permission",["$resource",function(a){return a("/api/admin/permissions/:id",{},{query:{method:"GET",isArray:!1},update:{method:"PUT"}})}]);var roleControllers=angular.module("roleControllers",[]);roleControllers.controller("RoleListController",["$scope","$http","$log","uiGridConstants","Role","gridFilter","applicationNavigationItems","$state",function(a,b,c,d,e,f,g,h){c.log("RoleListController"),angular.extend(this,new AbstractCrudListController(a,b,c,d,e,f)),a.entityListGrid.columnDefs=[{field:"id",pinnedLeft:!0,enableColumnResizing:!1,enableFiltering:!1,width:50},{field:"name",pinnedLeft:!0,width:200},{field:"roleType",pinnedLeft:!0,width:200},{field:"createdBy.username",name:"Created By",width:200},{field:"createdDate",width:200,cellFilter:"date:'"+platformParameters.formats.DATE_TIME_FORMAT+"'"},{field:"lastModifiedBy.username",name:"Last Modified By",width:200},{field:"lastModifiedDate",width:200,cellFilter:"date:'"+platformParameters.formats.DATE_TIME_FORMAT+"'"}],a.query={and:[{name:"title",operation:"=",value:"Page View"},{name:"description",operation:"=",value:"Allows to view a page."},{name:"permissionCategory",operation:"=",value:"PAGE"}]},a.filterCriteria={page:0,size:20,sort:"id,asc",gridFilterParameters:[{name:"permissionName",operation:"=",value:"PAGE_VIEW"},{name:"permissionCategory",operation:"=",value:null},{name:"title",operation:"=",value:"aaa"},{name:"description",operation:"=",value:null}]};var i={id:1,styleClass:"btn add-new-object-button",faIcon:"fa fa-plus",title:"New Role",onClick:function(){h.go("application.roles.add")},visible:!0,disabled:!1};g.setTopbarItem(i),a.read()}]),roleControllers.controller("RoleDetailController",["$scope","$http","$state","$stateParams","$log","$parse","Role",function(a,b,c,d,e,f,g){e.log("RoleDetailController"),angular.extend(this,new AbstractCrudDetailController(a,b,c,d,e,g,f,"application.roles")),a.get(d.id)}]),roleControllers.controller("RoleDefinePermissionsController",["$scope","$http","$state","$stateParams","$log","RolePermission",function(a,b,c,d,e,f){e.log("RoleDetailController"),a.rolePermission=null,a.selectedPermissionCategory=null,a.uniquePermissionCategories=[],a.get=function(b){if(e.log("selected role id:",b),!b)throw"Role id is required";f.get({id:b},function(b){a.rolePermission=b,e.log("RolePermission has been got: ",a.rolePermission),g(a.rolePermission.rolePermissions)})},a.saveForm=function(){e.log("update() - rolePermission: ",a.rolePermission),f.update({id:d.id},a.rolePermission,function(){e.log("RolePermission has been updated: ",a.rolePermission),c.go("application.roles.list")})},a.setSelectedPermissionCategory=function(b){a.selectedPermissionCategory=b};var g=function(b){for(var c=["ALL"],d=0;d<b.length;d++)c.indexOf(b[d].permission.permissionAclClassCategory.title)==-1&&c.push(b[d].permission.permissionAclClassCategory.title);a.uniquePermissionCategories=c,e.log("$scope.uniquePermissionCategories: ",a.uniquePermissionCategories),a.selectedPermissionCategory=a.uniquePermissionCategories[0]};a.get(d.id)}]);var platformRoleModule=angular.module("platformRoleModule",["roleControllers","roleServices","ui.router"]);platformRoleModule.config(["$stateProvider",function(a){a.state("application.roles",{url:"/roles",templateUrl:"/admin/modules/role/html/index.html"}).state("application.roles.list",{url:"/list",templateUrl:"/admin/modules/role/html/list.html",controller:"RoleListController"}).state("application.roles.add",{url:"/add",templateUrl:"/admin/modules/role/html/edit.html",controller:"RoleDetailController"}).state("application.roles.edit",{url:"/edit/:id",templateUrl:"/admin/modules/role/html/edit.html",controller:"RoleDetailController"}).state("application.roles.permissions",{url:"/permissions/:id",templateUrl:"/admin/modules/role/html/permissions.html",controller:"RoleDefinePermissionsController"})}]);var roleServices=angular.module("roleServices",["ngResource"]);roleServices.factory("Role",["$resource",function(a){return a("/api/admin/roles/:id",{},{query:{method:"GET",isArray:!1},update:{method:"PUT"}})}]),roleServices.factory("RolePermission",["$resource",function(a){return a("/api/admin/roles/:id/permissions",{},{query:{method:"GET",isArray:!1},update:{method:"PUT"}})}]);var userControllers=angular.module("userControllers",[]);userControllers.controller("UserListController",["$scope","$http","$log","uiGridConstants","User","gridFilter","applicationNavigationItems","$state",function(a,b,c,d,e,f,g,h){c.log("UserListController"),angular.extend(this,new AbstractCrudListController(a,b,c,d,e,f)),a.entityListGrid.columnDefs=[{field:"id",pinnedLeft:!0,enableColumnResizing:!1,enableFiltering:!1,width:50},{field:"username",pinnedLeft:!0,width:200},{field:"firstName",pinnedLeft:!0,width:200},{field:"lastName",pinnedLeft:!0,width:200},{field:"registrationIp",pinnedLeft:!0,width:200},{field:"state",pinnedLeft:!0,width:200},{field:"createdBy.username",name:"Created By",width:200},{field:"createdDate",width:200,cellFilter:"date:'"+platformParameters.formats.DATE_TIME_FORMAT+"'"},{field:"lastModifiedBy.username",name:"Last Modified By",width:200},{field:"lastModifiedDate",width:200,cellFilter:"date:'"+platformParameters.formats.DATE_TIME_FORMAT+"'"}],a.query={and:[{name:"title",operation:"=",value:"User View"}]},a.filterCriteria={user:0,size:20,sort:"id,asc",gridFilterParameters:[]};var i={id:1,styleClass:"btn add-new-object-button",faIcon:"fa fa-plus",title:"New User",onClick:function(){h.go("application.users.add")},visible:!0,disabled:!1};g.setTopbarItem(i),a.read()}]),userControllers.controller("UserDetailController",["$scope","$http","$state","$stateParams","$log","User","$parse",function(a,b,c,d,e,f,g){e.log("UserDetailController"),a.userGender=["MALE","FEMALE"],angular.extend(this,new AbstractCrudDetailController(a,b,c,d,e,f,g,"application.users")),a.get(d.id),a.today=function(){a.entity.birthday=new Date},a.clear=function(){a.entity.birthday=null},a.open=function(b){a.status.opened=!0},a.setDate=function(b,c,d){a.entity.birthday=new Date(b,c,d)},a.status={opened:!1}}]),userControllers.controller("UserAssignRolesController",["$scope","$http","$state","$stateParams","$log","UserRole",function(a,b,c,d,e,f){e.log("UserAssignRolesController"),a.userRole=null,a.selectedRoleType=null,a.uniqueRoleTypes=[],a.get=function(b){if(e.log("selected user id:",b),!b)throw"User id is required";f.get({id:b},function(b){a.userRole=b,e.log("UserRole has been got: ",a.userRole),g(a.userRole.userRoles)})},a.saveForm=function(){e.log("update() - userRole: ",a.userRole),f.update({id:d.id},a.userRole,function(){e.log("uUserRole has been updated: ",a.userRole)})},a.setSelectedRoleType=function(b){a.selectedRoleType=b};var g=function(b){for(var c=["ALL"],d=0;d<b.length;d++)c.indexOf(b[d].role.roleType)==-1&&c.push(b[d].role.roleType);a.uniqueRoleTypes=c,e.log("$scope.uniqueRoleTypes: ",a.uniqueRoleTypes),a.selectedRoleType=a.uniqueRoleTypes[0]};a.get(d.id)}]);var platformUserModule=angular.module("platformUserModule",["userControllers","userServices","ui.router"]);platformUserModule.config(["$stateProvider",function(a){a.state("application.users",{url:"/users",templateUrl:"/admin/modules/user/html/index.html"}).state("application.users.list",{url:"/list",templateUrl:"/admin/modules/user/html/list.html",controller:"UserListController"}).state("application.users.add",{url:"/add",templateUrl:"/admin/modules/user/html/edit.html",controller:"UserDetailController"}).state("application.users.edit",{url:"/edit/:id",templateUrl:"/admin/modules/user/html/edit.html",controller:"UserDetailController"}).state("application.users.roles",{url:"/roles/:id",templateUrl:"/admin/modules/user/html/roles.html",controller:"UserAssignRolesController"})}]);var userServices=angular.module("userServices",["ngResource"]);userServices.factory("User",["$resource",function(a){return a("/api/admin/users/:id",{},{query:{method:"GET",isArray:!1},update:{method:"PUT"}})}]),userServices.factory("UserRole",["$resource",function(a){return a("/api/admin/users/:id/roles",{},{query:{method:"GET",isArray:!1},update:{method:"PUT"}})}]);